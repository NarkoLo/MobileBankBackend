plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.jetbrains.dokka' version '1.4.32'
}

java{
	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config:5.5.0'
	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
	annotationProcessor 'org.springframework.boot:spring-boot-starter-security'
	annotationProcessor 'org.springframework.security:spring-security-config:5.5.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

//dokka {
//	outputFormat = 'html'
//	outputDirectory = "$buildDir/docs/javadoc"
//	includes = ['**/*.java']
//	moduleName = 'example'
//}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}